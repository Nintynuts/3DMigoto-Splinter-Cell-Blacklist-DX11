// Mesh - Bones (POS4,TEXCOORDx3 TC6)

#include "CB/PerPass.hlsl"
#include "CB/PerCamera.hlsl"
#include "CB/PerObject.hlsl"
#include "CB/BoneTransform.hlsl"
#include "3Dmigoto.hlsl"
#include "matrix.hlsl"

void main(
	float4 v0 : POSITION0,
	int4 v1 : TEXCOORD0,
	int2 v2 : TEXCOORD1,
	float4 v3 : NORMAL0,
	float4 v4 : TANGENT0,
	float4 v5 : BINORMAL0,
	int4 v6 : BLENDINDICES0,
	uint4 v7 : BLENDWEIGHT0,
	out float4 o0 : SV_Position0,
	out float4 o1 : TEXCOORD0,
	out float4 o2 : TEXCOORD1,
	out float4 o3 : TEXCOORD6)
{
	float4 r0,r1,r2,r3;
	
	r0.x = v5.w * gForces.w + gForces.x;
	r0.xy = v0.xy * gForces.y + r0.x;
	r0.x = sin(r0.x);
	r0.y = cos(r0.y);
	r0.z = gForces.z * v4.w;
	r1.x = r0.x * r0.z + v0.x;
	r1.y = r0.y * r0.z + v0.y;
	r1.z = v0.z;
	r0.xyz = gDrawScale.xyz * r1.xyz;
	r0.w = v0.w;
	
	float3x4 BonesMtx = get_bones_mtx(v6, v7);

	r3.xyz = mul(BonesMtx, r0);
	r0.xyz = -cViewPos_VS.xyz + r3.xyz;
	o2.xyz = r3.xyz;
	r3 = mul(r0.xyz, gWorldToProj);
	r0 = cProjSkinMesh + r3;
	o0 = r0;
	o2.w = min(64000, r0.w);
	r0.xy = (int2)v1.xy;
	r0.zw = (int2)v2.xy;
	o1 = 0.00048828125 * r0;
	r0.xyz = v3.zyx * 2 - 1;
	r3.xyz = mul(BonesMtx, r0.xyz);
	r0.xyz = normalise(r3.xyz);
	r0.w = 1;
	r1.xyz = mul(r0, cMtx1);
	r2 = r0.xyzz * r0.yzzx;
	r3.xyz = mul(r2, cMtx2);
	r1.xyz = r3.xyz + r1.xyz;
	r0.y = r0.y * r0.y;
	r0.x = r0.x * r0.x - r0.y;
	r0.xyz = cExtra * r0.x + r1.xyz;
	r0.xyz = max(0, r0.xyz);
	r0.w = 1;
	r0 = cSHScale * r0;
	o3 = bUseSH ? r0 : cAmbientColor;
	return;
}