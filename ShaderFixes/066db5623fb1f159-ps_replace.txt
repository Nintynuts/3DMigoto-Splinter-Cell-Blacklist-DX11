// Night Vision

#include "CB/PerFrame.hlsl"

cbuffer CB_PS_PostFinal : register(b7)
{
	float4 cMiscTerms : packoffset(c0);
	float4 cTint : packoffset(c1);
	float4 cBloomWeights : packoffset(c2);
	float4 cExtractTerms : packoffset(c3);
	float4 cNoiseTerms : packoffset(c4);
	float4 cNoiseOffsets : packoffset(c5);
	float3 cLevelsScale : packoffset(c6);
	float3 cLevelsBias : packoffset(c7);
	float3 cLevelsGamma : packoffset(c8);
	float4 cNightVisionTerms : packoffset(c9);
	float4 cDebugShadedBrightness : packoffset(c10);
	bool bPost : packoffset(c11.x);
	bool bBloom : packoffset(c11.y);
	bool bNoise : packoffset(c11.z);
	bool bNoiseLum : packoffset(c11.w);
	bool bWaves : packoffset(c12.x);
}
#include "texture.hlsl"
TEXTURE(_2D,sSceneTexPoint,0,0);
TEXTURE(_2D,sBloom,1,2);
TEXTURE(_2D,sNoise1,2,3);
TEXTURE(_2D,sTonemap,4,1);

#include "3Dmigoto.hlsl"

void main(
	float4 v0 : SV_Position0,
	float4 v1 : TEXCOORD0,
	out float4 o0 : SV_Target0)
{
	float4 r0,r1,r2;
	
	r0.xyz = SAMPLE(sSceneTexPoint, v1.zw).xzy;
	if (bWaves != 0) {
		r1.xy = cMiscTerms.zw + v1.zw;
		r0.x = SAMPLE(sSceneTexPoint, r1.xy).x;
		r1.xy = -cMiscTerms.zw + v1.zw;
		r0.y = SAMPLE(sSceneTexPoint, r1.xy).z;
	}
	r0.w = cmp(cHdrControl < 0);
	r1.xyz = r0.w ? r0.xzy : 1;
	r0.xyz = r1.xyz * r0.xzy;
	r0.w = SAMPLE(sTonemap, 0).x;
	r0.xyz = r0.xyz * r0.w;
	if (bPost != 0) {
		r1.xyz = SAMPLE(sBloom, v1.xy).xyz;
		r1.xyz = cBloomWeights.x * r1.xyz + r0.xyz;
		r0.xyz = gColorControl.z * r1.xyz;
	}
	r0.xyz = max(0, r0.xyz);
	r0.xyz = min(cExtractTerms.w, r0.xyz);
	if (bPost != 0) {
		r1.zw = cNoiseTerms.xy * v1.zw;
		r1.xy = v1.zw;
		r2.xy = cNoiseTerms.xy;
		r2.zw = 0.5;
		r1 = r1 * r2 + cNoiseOffsets;

		r1.x += separation;

		r2.xyz = sNoise1.Sample(sNoise1_s, r1.xy * 1.5).xyz;
		r1.xyz = sNoise1.Sample(sNoise1_s, r1.zw * 1.5).xyz;
		r1.xyz = r2.xyz + r1.xyz;
		r1.xyz = r1.xyz * cNoiseTerms.z - cNoiseTerms.z;
		r1.yz = bPost ? r1.x : r1.yz;
		r0.xyz = r1.xyz + r0.xyz;
		r0.w = dot(r0.xyz, float3(0.3,0.6,0.1));
		r1.xyz = r0.xyz - r0.w;
		r1.xyz = cTint.w * r1.xyz + r0.w;
		r1.xyz = r1.xyz * cMiscTerms.x + cMiscTerms.y;
		r0.xyz = cTint.xyz * r1.xyz;
	}
	r0.xyz = saturate(r0.xyz * cLevelsScale.xyz + cLevelsBias.xyz);
	r0.xyz = log2(r0.xyz);
	r0.xyz = cLevelsGamma.xyz * r0.xyz;
	r0.xyz = exp2(r0.xyz);
	o0.w = dot(r0.xyz, float3(0.299,0.587,0.114));
	o0.xyz = r0.xyz;
	return;
}