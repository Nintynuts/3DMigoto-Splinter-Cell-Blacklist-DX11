// Mesh - Bones (POS4,TEXCOORDx6 TC5)

#include "CB/PerCamera.hlsl"
#include "CB/PerObject.hlsl"
#include "CB/BoneTransform.hlsl"
#include "CB/VS_ColorPalette.hlsl"
#include "loadout.hlsl" 

void main(
	float4 v0 : POSITION0,
	int4 v1 : TEXCOORD0,
	int2 v2 : TEXCOORD1,
	float4 v3 : NORMAL0,
	float4 v4 : TANGENT0,
	float4 v5 : BINORMAL0,
	int4 v6 : BLENDINDICES0,
	uint4 v7 : BLENDWEIGHT0,
	out float4 o0 : SV_Position0,
	out float4 o1 : TEXCOORD0,
	out float4 o2 : TEXCOORD1,
	out float4 o3 : TEXCOORD2,
	out float4 o4 : TEXCOORD3,
	out float4 o5 : TEXCOORD4,
	out float4 o6 : TEXCOORD5)
{
	float4 r0,r1,r2,r3,r4,r5,r6,r7;
	
	float3x4 BonesMtx = get_bones_mtx(v6, v7);

	r2.x = gForces.z * v4.w;
	r2.y = v5.w * gForces.w + gForces.x;
	r2.yz = v0.xy * gForces.y + r2.y;
	r2.y = sin(r2.y);
	r4.x = r2.y * r2.x + v0.x;
	r2.y = cos(r2.z);
	r4.y = r2.y * r2.x + v0.y;
	r4.z = v0.z;
	r2.xyz = gDrawScale.xyz * r4.xyz;
	r2.w = v0.w;
	r4.xyz = mul(BonesMtx, r2);
	r2.xyz = -cViewPos_VS.xyz + r4.xyz;
	r5 = mul(r2.xyz, (float3x4)gWorldToProj);
	r2 = cProjSkinMesh + r5;
	o2.w = min(64000, r2.w);
	r5.xy = (int2)v1.xy;
	r5.zw = (int2)v2.xy;
	o1 = 0.00048828125 * r5;
	r5.xyz = v4.zyx * 2 - 1;
	r6.xyz = mul((float3x3)BonesMtx, r5.xyz);
	r5.xyz = v3.zyx * 2 - 1;
	r7.xyz = mul((float3x3)BonesMtx, r5.xyz);
	r5.xyz = v5.zyx * 2 - 1;
	r0.xyz = mul((float3x3)BonesMtx, r5.xyz);
	o3.xyz = mul(r6.xyz, (float3x3)gLocalToWorld);
	o4.xyz = mul(r0.xyz, (float3x3)gLocalToWorld);
	o5.xyz = mul(r7.xyz, (float3x3)gLocalToWorld);
	if (bUseColorPalette != 0) {
		r0.x = 255 * v3.w;
		r0.x = (int)r0.x;
		o6 = cColorPalette[r0.x];
	} else {
		o6 = 1;
	}
	o0 = reorientate(r2);
	o2.xyz = r4.xyz;
	o3.w = 0;
	o4.w = 0;
	o5.w = 0;
	return;
}