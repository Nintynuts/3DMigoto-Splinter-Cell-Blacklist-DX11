// Body geometry 1

#include "CB_PerCamera.hlsl"

#include "CB_PerObject.hlsl"

cbuffer CB_VS_Morphing : register(b0)
{
	float4 gForces : packoffset(c0);
}

cbuffer CB_BoneTransform : register(b2)
{
	float4 gBones[156] : packoffset(c0);
}

#include "3Dmigoto.hlsl"

void main(
	float4 v0 : POSITION0,
	int4 v1 : TEXCOORD0,
	int2 v2 : TEXCOORD1,
	float4 v3 : NORMAL0,
	float4 v4 : TANGENT0,
	float4 v5 : BINORMAL0,
	int4 v6 : BLENDINDICES0,
	uint4 v7 : BLENDWEIGHT0,
	out float4 o0 : SV_Position0,
	out float4 o1 : TEXCOORD0)
{
	float4 r0,r1,r2,r3,r4,r5;
	
	r0.x = v5.w * gForces.w + gForces.x;
	r0.xy = v0.xy * gForces.y + r0.x;
	r0.x = sin(r0.x);
	r0.y = cos(r0.y);
	r0.z = gForces.z * v4.w;
	r1.x = r0.x * r0.z + v0.x;
	r1.y = r0.y * r0.z + v0.y;
	r1.z = v0.z;
	r0.xyz = gDrawScale.xyz * r1.xyz;
	r1 = (int4)v6 * 3;
	r2 = (uint4)v7;
	r2 = 0.00392156886 * r2;
	r3 = gBones[r1.y] * r2.y;
	r3 = gBones[r1.x] * r2.x + r3;
	r3 = gBones[r1.z] * r2.z + r3;
	r1 = gBones[r1.w] * r2.w + r3;
	r0.w = v0.w;
	r1.x = dot(r1, r0);
	r3 = mad((int4)v6.xxyy, 3, int4(1,2,1,2));
	r4 = gBones[r3.z] * r2.y;
	r4 = gBones[r3.x] * r2.x + r4;
	r5 = mad((int4)v6.zzww, 3, int4(1,2,1,2));
	r4 = gBones[r5.x] * r2.z + r4;
	r4 = gBones[r5.z] * r2.w + r4;
	r1.y = dot(r4, r0);
	r4 = gBones[r3.w] * r2.y;
	r3 = gBones[r3.y] * r2.x + r4;
	r3 = gBones[r5.y] * r2.z + r3;
	r2 = gBones[r5.w] * r2.w + r3;
	r1.z = dot(r2, r0);
	r0.xyz = -cViewPos_VS.xyz + r1.xyz;
	r1 = mul(r0.xyz, gWorldToProj);
	r0 = cProjSkinMesh + r1;
	o0 = r0;
	o1.zw = r0.zw;
	r0.xy = (int2)v1.xy;
	o1.xy = 0.00048828125 * r0.xy;
	
	//correct_orientation(o0);
	return;
}