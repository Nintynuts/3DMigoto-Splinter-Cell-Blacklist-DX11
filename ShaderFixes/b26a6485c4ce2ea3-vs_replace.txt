// Lighting - Mesh with Bones

#include "CB/PerCamera.hlsl"
#include "CB/PerObject.hlsl"
#include "CB/BoneTransform.hlsl"
#include "3Dmigoto.hlsl"
#include "matrix.hlsl"

void main(
	float4 v0 : POSITION0,
	int4 v1 : TEXCOORD0,
	int2 v2 : TEXCOORD1,
	float4 v3 : NORMAL0,
	float4 v4 : TANGENT0,
	float4 v5 : BINORMAL0,
	int4 v6 : BLENDINDICES0,
	uint4 v7 : BLENDWEIGHT0,
	out float4 o0 : SV_Position0,
	out float4 o1 : TEXCOORD0)
{
	float4 r0,r1;
	
	r0.x = v5.w * gForces.w + gForces.x;
	r0.xy = v0.xy * gForces.y + r0.x;
	r0.x = sin(r0.x);
	r0.y = cos(r0.y);
	r0.z = gForces.z * v4.w;
	r1.x = r0.x * r0.z + v0.x;
	r1.y = r0.y * r0.z + v0.y;
	r1.z = v0.z;
	r0.xyz = gDrawScale.xyz * r1.xyz;
	r0.w = v0.w;
	
	float3x4 BonesMtx = get_bones_mtx(v6, v7);

	r1.xyz = mul(BonesMtx, r0);
	r0.xyz = -cViewPos_VS.xyz + r1.xyz;
	r1 = mul(r0.xyz, gWorldToProj);
	r0 = cProjSkinMesh + r1;
	o0 = r0;
	o1.zw = r0.zw;
	r0.xy = (int2)v1.xy;
	o1.xy = 0.00048828125 * r0.xy;
	return;
}