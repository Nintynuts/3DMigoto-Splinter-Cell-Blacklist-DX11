// GUI - Text Batched

#include "CB/VS_ScaleformBatched.hlsl"
#include "CB/PerCamera.hlsl"
#include "markers.hlsl"

void main(
	float4 v0 : POSITION0,
	float2 v1 : TEXCOORD0,
	float4 v2 : COLOR0,
	float4 v3 : COLOR1,
	uint vID : SV_VertexID,
	out float4 o0 : SV_Position0,
	out float4 o1 : TEXCOORD0,
	out float4 o2 : TEXCOORD1,
	out float4 o3 : TEXCOORD2,
	out float4 o4 : COLOR0)
{	
	int r0 = (int)(2040.01001 * v3.x);
	o0.x = dot(v0, mvp[r0 + 0]);
	o0.y = dot(v0, mvp[r0 + 1]);
	o0.zw = v0.zw;
	o1.xy = v1.xy;
	o3 = mvp[r0 + 4];
	o2 = mvp[r0 + 5];
	o4 = v2.zyxw;
	
	if (!rt_res_size_match()) // Render Target
		return;

	if (use_depth)
	{
		// offset by any chars from a partial batch
		uint quad = quad_id(vID) + num_chars;
		uint sum_elements = 0;
		int idx = marker_index - 1; // -1 because of do loop
		// loop through goals
		do {
			idx++;
			uint marker_chars = markers[idx].chars;
			if (marker_chars == 0)
				break;
			sum_elements += marker_chars;
		} while (quad > sum_elements);
		o0.x += markers[idx].depth * -eye;
	}

	return;
}