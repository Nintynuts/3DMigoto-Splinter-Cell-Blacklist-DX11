// GUI - Text Batched

#define BATCHED
#include "CB/VS_Scaleform.hlsl"
#include "CB/PerCamera.hlsl"
#include "markers.hlsl"

void main(
	float4 v0 : POSITION0,
	float2 v1 : TEXCOORD0,
	float4 v2 : COLOR0,
	float4 v3 : COLOR1,
	uint vID : SV_VertexID,
	out float4 o0 : SV_Position0,
	out float4 o1 : TEXCOORD0,
	out float4 o2 : TEXCOORD1,
	out float4 o3 : TEXCOORD2,
	out float4 o4 : COLOR0)
{	
	int r0 = (int)(255.00125 * v3.x);
	o0.xy = mul(v0, sf[r0].pos).xy;
	o0.zw = v0.zw;
	o1.xy = v1.xy;
	o3 = sf[r0].other1;
	o2 = sf[r0].other2;
	o4 = v2.zyxw;
	
	if (!rt_res_size_match()) // Render Target
		return;

	if (use_depth)
	{
		// offset by any chars from a partial batch
		uint quad = quad_id(vID) + partial_chars;
		float nearest = 2;
		float idx = -1;
		// loop through goals
		for (int i = 0; all(markers[i].screenPos); i++)
		{
			float distance = length(o0.xy - (markers[i].screenPos /*/ float2(res_width,res_height)*/));
			if (distance < nearest){
				idx = i;
				nearest = distance;
			}
		}
		if (idx > -1)
			o0.x += markers[idx].depth * -eye;
	}

	return;
}