// Puddle

#include "CB/PerPass.hlsl"
#include "CB/PerCamera.hlsl"
#include "CB/PerObject.hlsl"
#include "CB/PerFogControl.hlsl"
#include "3Dmigoto.hlsl"

void main(
  float4 v0 : POSITION0,
  int4 v1 : TEXCOORD0,
  int2 v2 : TEXCOORD1,
  float4 v3 : NORMAL0,
  float4 v4 : TANGENT0,
  float4 v5 : BINORMAL0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6)
{
  float4 r0,r1,r2,r3;
  float3 cViewPosStereo = cViewPosStereo_VS().xyz;
  float4x3 gLocalToView = gLocalToWorld;
  gLocalToView[3].xyz -= cViewPosStereo;
  v0.xyz *= gDrawScale.xyz;
  r0.xyz = mul(v0, gLocalToView);
  r0.w = v0.w;
	r1 = mul(r0.xyz, (float3x4)gWorldToProj);
  r0.xyz += cViewPosStereo;
  r0.w = 1;
  r1 += cProjSkinMesh;
  o0 = r1;
  r2.xy = (int2)v1.xy;
  r2.zw = (int2)v2.xy;
  o1 = r2 / 2048;
  o2 = r0;
  r0.xyz = cViewPosStereo - r0.xyz;
  r0.x = sq_mag(r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = -cFog_Density_Start_Range.y + r0.x;
  r0.x = saturate(r0.x / cFog_Density_Start_Range.z);
  r0.x = cFog_Density_Start_Range.x * r0.x;
  o6.z = bFog ? r0.x : 0;
  o3.w = 0;
  r0.xyz = v4.zyx * 2 - 1;
  o3.xyz = mul(r0.xyz, (float3x3)gLocalToWorld);
  o4.w = 0;
  r0.xyz = v5.zyx * 2 - 1;
  o4.xyz = mul(r0.xyz, (float3x3)gLocalToWorld);
  o5.w = 0;
  r0.xyz = v3.zyx * 2 - 1;
  r2.xyz = mul(r0.xyz, (float3x3)gLocalToWorld);
  o5.xyz = r2.xyz;
  r0 = gViewportSB * r1.xyww;
  o6.w = r1.w;
  o6.xy = r0.xy + r0.zw;
  r0.xyz = normalise(r2.xyz);
  r0.w = 1;
  r1.xyz = mul(r0, cMtx1);
  r2 = r0.xyzz * r0.yzzx;
  r3.xyz = mul(r2, cMtx2);
  r1.xyz = r3.xyz + r1.xyz;
  r0.y = r0.y * r0.y;
  r0.x = r0.x * r0.x - r0.y;
  r0.xyz = cExtra * r0.x + r1.xyz;
  r0.xyz = max(0, r0.xyz);
  r0.w = 1;
  r0 = cSHScale * r0;
  o7 = bUseSH ? r0 : cAmbientColor;
  return;
}