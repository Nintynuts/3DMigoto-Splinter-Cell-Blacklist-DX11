// Lighting Spot (No Camera data)

#include "CB_PS_PerLightBatch.hlsl"

cbuffer CB_PS_DeferredSpotLight : register(b7)
{
	float4x4 cScreenToWorld : packoffset(c0);
}

SamplerState sDepth_s : register(s0);
SamplerState sNormal_s : register(s1);
SamplerState sSceneAlbedo_s : register(s2);
SamplerState sSpotTex0_s : register(s6);
SamplerState sShadowSamples_s : register(s15);
Texture2D<float4> sDepth : register(t0);
Texture2D<float4> sNormal : register(t1);
Texture2D<float4> sShadowSamples : register(t2);
Texture2D<float4> sSpotTex0 : register(t3);
Texture2D<float4> sSceneAlbedo : register(t4);

// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

void main(
	float4 v0 : SV_Position0,
	float4 v1 : TEXCOORD0,
	float v2 : TEXCOORD1,
	out float4 o0 : SV_Target0)
{
	float4 r0,r1,r2,r3,r4,r5;

	r0.xyzw = v1.xyzw / v2.xxxx;
	r2.xy = r0.xy;
	r2.zw = float2(1,1);
	r1.xy = sDepth.Sample(sDepth_s, r0.zw).xw;
	r2.xyz = r2.xyz * r1.xxx;
	
	float4 stereo = StereoParams.Load(0);
	r2.x -= stereo.x * (r2.z - stereo.y); 
	
	r3.x = dot(r2.xyzw, cScreenToWorld._m00_m10_m20_m30);
	r3.y = dot(r2.xyzw, cScreenToWorld._m01_m11_m21_m31);
	r3.z = dot(r2.xyzw, cScreenToWorld._m02_m12_m22_m32);
	r1.xzw = sNormal.Sample(sNormal_s, r0.zw).xyz;
	r2.xyz = sShadowSamples.Sample(sShadowSamples_s, r0.zw).xyz;
	r3.w = 1;
	r0.x = dot(r3.xyzw, cSpot0.proj._m00_m10_m20_m30);
	r0.y = dot(r3.xyzw, cSpot0.proj._m01_m11_m21_m31);
	r4.x = dot(r3.xyzw, cSpot0.proj._m02_m12_m22_m32);
	r3.w = dot(r3.xyzw, cSpot0.proj._m03_m13_m23_m33);
	r4.x = cmp(abs(r4.x) < 1);
	r0.xy = r0.xy / r3.ww;
	r4.yzw = sSpotTex0.Sample(sSpotTex0_s, r0.xy).xyz;
	if (r4.x != 0) {
		r1.xzw = r1.xzw * float3(2,2,2) + float3(-1,-1,-1);
		r0.x = dot(r1.xzw, r1.xzw);
		r0.x = rsqrt(r0.x);
		r1.xzw = r1.xzw * r0.xxx;
		r3.xyz = cSpot0.pos.xyz + -r3.xyz;
		r0.x = dot(r3.xyz, r3.xyz);
		r0.x = rsqrt(r0.x);
		r5.xyz = r3.xyz * r0.xxx;
		r0.x = dot(r3.xyz, r5.xyz);
		r0.x = saturate(r0.x * cSpot0.atten.x + cSpot0.atten.y);
		r0.x = -r0.x * r0.x + 1;
		r3.xyz = r4.yzw * r0.xxx;
		r3.xyz = r3.xyz * r3.xyz;
		r2.w = 1;
		r0.x = dot(cSpot0.mask.xyzw, r2.xyzw);
		r2.xyz = r3.xyz * r0.xxx;
		r0.x = dot(r1.xzw, r5.xyz);
		r0.y = saturate(r0.x);
		r0.x = r0.x * 0.5 + 0.5;
		r0.x = r0.x * r0.x;
		r0.x = r0.x * r0.x + -r0.y;
		r0.x = r1.y * r0.x + r0.y;
		r1.xyz = r0.xxx * r2.xyz;
		r1.xyz = cSpot0.dCol.xyz * r1.xyz;
	} else {
		r1.xyz = float3(0,0,0);
	}
	r0.xyz = sSceneAlbedo.Sample(sSceneAlbedo_s, r0.zw).xyz;
	r0.xyz = r0.xyz * r0.xyz;
	o0.xyz = r1.xyz * r0.xyz;
	o0.w = 1;
	return;
}
