// Lighting Spot

#include "CB_PerCamera.hlsl"

#include "CB_PS_PerLightBatch.hlsl"

cbuffer CB_PS_DeferredSpotLight : register(b7)
{
	float4x4 cScreenToWorld : packoffset(c0);
}

SamplerState sDepth_s : register(s0);
SamplerState sNormal_s : register(s1);
SamplerState sSceneAlbedo_s : register(s2);
SamplerState sSpotTex0_s : register(s6);
SamplerState sShadowSamples_s : register(s15);
Texture2D<float4> sDepth : register(t0);
Texture2D<float4> sNormal : register(t1);
Texture2D<float4> sShadowSamples : register(t2);
Texture2D<float4> sSpotTex0 : register(t3);
Texture2D<float4> sSceneAlbedo : register(t4);

#include "3Dmigoto.hlsl"

void main(
	float4 v0 : SV_Position0,
	float4 v1 : TEXCOORD0,
	float v2 : TEXCOORD1,
	out float4 o0 : SV_Target0)
{
	float4 r0,r1,r2,r3,r4,r5,r6;

	//o0 = 1;
	//return;

	r0 = v1 / v2.x;
	r2.xy = r0.xy;
	r2.zw = 1;
	r1.xy = sDepth.Sample(sDepth_s, r0.zw).xw;
	r2.xyz = r1.x * r2.xyz;

	stereo_unfix(r2);
	
	r3.xyz = mul(r2, cScreenToWorld);
	r3.w = 1;
	r2 = sNormal.Sample(sNormal_s, r0.zw);
	r4.xyz = sShadowSamples.Sample(sShadowSamples_s, r0.zw).xyz;
	r0.x = dot(r3, cSpot0.proj._m00_m10_m20_m30);
	r0.y = dot(r3, cSpot0.proj._m01_m11_m21_m31);
	r1.x = dot(r3, cSpot0.proj._m02_m12_m22_m32);
	r1.z = dot(r3, cSpot0.proj._m03_m13_m23_m33);
	r1.x = cmp(abs(r1.x) < 1);
	r0.xy = r0.xy / r1.z;
	r5.xyz = sSpotTex0.Sample(sSpotTex0_s, r0.xy).xyz;
	if (r1.x != 0) {
		r1.xzw = cViewPos.xyz + -r3.xyz;
		r0.x = dot(r1.xzw, r1.xzw);
		r0.x = rsqrt(r0.x);
		r2.xyz = r2.xyz * 2 + -1;
		r2.xyz = normalise(r2.xyz);
		r0.y = 11 * r2.w;
		r0.y = exp2(r0.y);
		r3.xyz = cSpot0.pos.xyz + -r3.xyz;
		r6.xyz = normalise(r3.xyz);
		r2.w = dot(r3.xyz, r6.xyz);
		r2.w = saturate(r2.w * cSpot0.atten.x + cSpot0.atten.y);
		r2.w = -r2.w * r2.w + 1;
		r3.xyz = r5.xyz * r2.w;
		r3.xyz = r3.xyz * r3.xyz;
		r4.w = 1;
		r2.w = dot(cSpot0.mask, r4);
		r3.xyz = r3.xyz * r2.w;
		r2.w = dot(r2.xyz, r6.xyz);
		r3.w = saturate(r2.w);
		r2.w = r2.w * 0.5 + 0.5;
		r2.w = r2.w * r2.w;
		r2.w = r2.w * r2.w + -r3.w;
		r1.y = r1.y * r2.w + r3.w;
		r4.xyz = r1.y * r3.xyz;
		r4.xyz = cSpot0.dCol.xyz * r4.xyz;
		r1.y = saturate(4 * r1.y);
		r3.xyz = r3.xyz * r1.y;
		r0.y = max(9.99999975e-006, r0.y);
		r1.xyz = r1.xzw * r0.x + r6.xyz;
		r1.xyz = normalise(r1.xyz);
		r0.x = saturate(dot(r1.xyz, r2.xyz));
		r0.x = log2(r0.x);
		r0.x = r0.y * r0.x;
		r0.x = exp2(r0.x);
		r0.y = 2 + r0.y;
		r0.x = r0.y * r0.x;
		r0.x = 0.125 * r0.x;
		r1.xyz = r0.x * r3.xyz;
		r1.xyz = cSpot0.sCol.xyz * r1.xyz;
	} else {
		r4.xyz = 0;
		r1.xyz = 0;
	}
	r0 = sSceneAlbedo.Sample(sSceneAlbedo_s, r0.zw);
	r0 = r0 * r0;
	r0.w = 2.66666675 * r0.w;
	r1.xyz = r1.xyz * r0.w;
	o0.xyz = r4.xyz * r0.xyz + r1.xyz;
	o0.w = 1;
	return;
}
