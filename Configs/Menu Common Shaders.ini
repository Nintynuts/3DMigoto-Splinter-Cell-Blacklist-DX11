;[Hunting]
;analyse_options=dump_tex dds mono

[Constants]
global persist $gui_separation=0
global persist $isolate_id=0
global persist $shader_isolation=0
global persist $hide_ui=0
global $shader_id=0
global $max_id=0
global $max_id_prev=0
global $menu_open=0
; Goals
global $goals=0
global $goalTexts=0
global $goalBGs=0
global $noDepth=0

[Present]
z2=$gui_separation
$menu_open=0
$max_id_prev=$max_id
$max_id=0
; Goals
$goals=0
$goalTexts=0
$goalBGs=0
$noDepth=0

[KeyToggleUI]
; Hash/Tilde #/~
Key=VK_OEM_7 
run=CommandListToggleUI

[CommandListToggleUI]
$hide_ui=!$hide_ui

[KeyToggleShaderIsolation]
; Colon/Semi-Colon :/;
Key=VK_OEM_1 
run=CommandListToggleUIShaderIsolation

[CommandListToggleUIShaderIsolation]
$shader_isolation=!$shader_isolation

[KeyIncreaseUIShader]
; Equals/Plus =/+
Key=VK_OEM_PLUS 
run=CommandListIncrementShaderID

[CommandListIncrementShaderID]
$isolate_id=$isolate_id + 1
if ($isolate_id > $max_id_prev)
	$isolate_id = $max_id_prev
endif

[KeyDecreaseUIShader]
; Minus/Underscore -/_
Key=VK_OEM_MINUS 
run=CommandListDecrementShaderID

[CommandListDecrementShaderID]
$isolate_id=$isolate_id - 1
if ($isolate_id < 0)
	$isolate_id = 0
endif

[KeyResetUIDepth]
; Apostrophe/At '/@
Key=VK_OEM_3 
$gui_separation=0

[KeyDecreaseUIDepth]
; Open Square/Curly Bracket [/{
Key=VK_OEM_4
run=CommandListDecrementDepthID

[KeyIncreaseUIDepth]
; Close Square/Curly Bracket ]/}
Key=VK_OEM_6 
run=CommandListIncrementDepthID

[CommandListResetDepthID]
$gui_separation=0
z2=$gui_separation

[CommandListIncrementDepthID]
$gui_separation=$gui_separation + 1
z2=$gui_separation

[CommandListDecrementDepthID]
$gui_separation=$gui_separation - 1
z2=$gui_separation

[CommandListMenuShader]
$menu_open=(rt_width == res_width)

[CommandListGUIShader]
run=CommandListGUIShaderNoDump
;dump=dump_tex dds share_dupes mono ps-t0

[CommandListGUIShaderNoDump]
run=CommandListGUIShaderNoTextures
checktextureoverride=ps-t0
x2=ps-t0
y2=$menu_open

[CommandListGUIShaderNoTextures]
if $hide_ui || ($shader_isolation && $isolate_id != $shader_id)
	handling=skip
endif
if ($max_id < $shader_id)
	$max_id = $shader_id
endif
$shader_id=0
run=CommandListResolution

[CommandListResolution]
x=rt_width
y=rt_height
z=res_width
w=res_height

[Constants]
global $show_depth=0

[KeyToggleDepth]
type=cycle
Key=VK_OEM_2
$show_depth=1,0

[ResourceDepthBuffer]

[ResourceMatrices]

[Resource1x1]
type=Texture2D
width=1
height=1
format=R32_FLOAT
mips=1
array=1
msaa=1

[ResourceDepthValue]
type=RWStructuredBuffer
stride=4
array=1

[CommandListDepthBuffer]
vs-t10=ResourceDepthBuffer

[CommandListDepthVariables]
run=CommandListDepthBuffer
vs-cb11=ResourceMatrices

[CustomShaderOutputGoalBounds]
vs=ShaderFixes/depth_adjust_quad_vs.hlsl
ps=ShaderFixes/depth_adjust_quad_ps.hlsl
run=CommandListOutputGoalBounds

[CustomShaderOutputGoalBoundsBatched]
vs=ShaderFixes/depth_adjust_quad_vs_batched.hlsl
ps=ShaderFixes/depth_adjust_quad_ps.hlsl
run=CommandListOutputGoalBounds

[CommandListOutputGoalBounds]
run=BuiltInCommandListUnbindAllRenderTargets
run=CommandListGUIShaderNoDump
vs-t13=copy vb0
ps-cb11=ResourceMatrices
ps-t10=ResourceDepthBuffer
o0=set_viewport Resource1x1
ps-u1=ResourceDepthValue
post ps-u1=null
draw=from_caller

[ShaderOverrideDepthSource]
hash=29b5047597d81be1
post ResourceDepthBuffer=copy ps-t0
post ResourceMatrices=copy ps-cb11
run=CommandListDisplayDepth

[ShaderOverrideDepthSourceSonar]
hash=5fe6d8164825fe0e
post ResourceDepthBuffer=copy ps-t1
post ResourceMatrices=copy ps-cb11
run=CommandListDisplayDepth

[CommandListDisplayDepth]
;if ($show_depth)
;Resource\ShaderFixes\Custom\debug_2d.ini\Debug2D=ResourceDepthBuffer
;ps-cb11=ResourceMatrices
;endif

[CommandListDepthGoal]
; If no depth has been calculated this does nothing
if (!$noDepth)
	vs-t14=ResourceDepthValue
endif
post vs-t14=null
; Start of Goal
if (ps-t0 == -2)
	post $goals = $goals + 1
endif
; End of Goal (2 drawn)
if (ps-t0 == -2.5)
	post $goalBGs = $goalBGs + 1
endif
; Reset Depth @ End of Target/Goal/Crosshair
if ((ps-t0 == -2.5 && $goalBGs == 2) || ps-t0 == -3.5 || ps-t0 == -1)
	post $goalBGs = 0
	post clear=ResourceDepthValue
endif

[ShaderOverride_Text]
hash=6f56e2eb15c63f14
; Goal texts are drawn first, we count them
if ($goals)
	post $goalTexts = $goalTexts + 1
endif
; Two texts are drawn per Goal, 
; we know how many goals have been drawn, 
; so if we exceed 2*Goals, don't use depth
if ($goalTexts >= ($goals * 2))
	pre $noDepth=1
	; reset so further goal graphics use depth
	post $noDepth=0
endif
$shader_id=1
run=CommandListGUIShaderNoTextures
run=CommandListDepthGoal

[ShaderOverride_TextBatched]
hash=9fe114e79584a0ac
$shader_id=2
run=CommandListGUIShaderNoTextures
run=CommandListDepthGoal

[ShaderOverride_Decorations]
hash=99994085a3f29305
$shader_id=5
run=CommandListGUIShader
run=CommandListMenuShader

[ShaderOverride_DecorationsBatched]
hash=55642c752fa497f2
; Calculate Depth @ Start of Target/Goal/Crosshair
if (ps-t0 == -3 || ps-t0 == -2 || ps-t0 == -1)
	run=CustomShaderOutputGoalBoundsBatched
endif
$shader_id=4
run=CommandListGUIShader
run=CommandListDepthGoal

[ShaderOverride_HUD+Images1]
hash=7fdf27a3924d5530
; Calculate Depth @ Start of Target/Goal/Crosshair
if (ps-t0 == -3 || ps-t0 == -2 || ps-t0 == -1)
	run=CustomShaderOutputGoalBounds
endif
$shader_id=3
run=CommandListGUIShader
run=CommandListDepthGoal
vs-cb11=ResourceMatrices

[ShaderOverride_HUD+Images2]
hash=9ceefab76c72863a
$shader_id=6
run=CommandListGUIShader

[ShaderOverride_BlockColour]
hash=2201df03f7a2d6a8
$shader_id=7
run=CommandListGUIShader

[ShaderOverride_BlockColourBatched]
hash=07a16668ff270883
$shader_id=8
run=CommandListGUIShader
run=CommandListDepthVariables
vs-cb11=ResourceMatrices

[ShaderOverride_ShadowNetText]
hash=bc2dd3947bd54b63
$shader_id=9
run=CommandListGUIShaderNoDump

[ShaderOverride_ShadowNetTextBatched]
hash=69dba94fd37b7ae4
$shader_id=10
run=CommandListGUIShaderNoDump

[ShaderOverride_ShadowNetDecorations]
hash=8024ec61c6f1d980
$shader_id=11
run=CommandListGUIShader
run=CommandListMenuShader

[ShaderOverride_ShadowNetImages]
hash=564a374fdac29117
$shader_id=12
run=CommandListGUIShader

[ShaderOverride_ShadowNetOverlay1-Colour]
hash=99b627bfa17cbe1d
$shader_id=13
run=CommandListGUIShader

[ShaderOverride_ShadowNetOverlay2-Colour]
hash=3cb6ac24789031c7
$shader_id=14
run=CommandListGUIShader

[ShaderOverride_ShadowNetBlockColour]
hash=6a2a901c49cf4c66
$shader_id=15
run=CommandListGUIShader

[ShaderOverride_ShadowNetBackground]
hash=fdf0b6f2a4f3acec
$shader_id=16
run=CommandListGUIShader

[ShaderOverride_ShadowNetBackgroundElement]
hash=257d74e7390dfbb2
$shader_id=17
run=CommandListGUIShader

[ShaderOverride_LightFlares]
hash=c4c52320554d1ee9
run=CommandListDepthBuffer
vs-t13=copy vb0

[ShaderOverride_Glowing_Bits]
hash=0639e523abe03973

;run= CommandListDumpTex
[CommandListDumpTex]
analyse_options=dump_tex dds mono
[CommandListDumpTex0]
dump=dump_tex dds mono ps-t0
[CommandListDumpTex0Stereo]
dump=dump_tex jps stereo ps-t0
[CommandListDumpRT]
post dump=dump_tex jpg mono o0
[CommandListDumpCB]
analyse_options=dump_cb txt
[CommandListDumpVB]
analyse_options=dump_vb txt