[Constants]
global $goals=0
global $goalTexts=0
global $goalBGs=0
global $noDepth=0
global $show_depth=0

[Present]
$goals=0
$goalTexts=0
$goalBGs=0
$noDepth=0

[KeyToggleDepth]
type=cycle
Key=VK_OEM_2
$show_depth=1,0

[ResourceDepthBuffer]

[ResourceMatrices]

[Resource1x1]
type=Texture2D
width=1
height=1
format=R32_FLOAT
mips=1
array=1
msaa=1

[ResourceDepthValue]
type=RWStructuredBuffer
stride=4
array=1

[CommandListDepthBuffer]
vs-t10=ResourceDepthBuffer

[CommandListDepthVariables]
run=CommandListDepthBuffer
vs-cb11=ResourceMatrices

[CustomShaderOutputGoalBounds]
vs=ShaderFixes/depth_adjust_quad_vs.hlsl
ps=ShaderFixes/depth_adjust_quad_ps.hlsl
run=CommandListOutputGoalBounds

[CustomShaderOutputGoalBoundsBatched]
vs=ShaderFixes/depth_adjust_quad_vs_batched.hlsl
ps=ShaderFixes/depth_adjust_quad_ps.hlsl
run=CommandListOutputGoalBounds

[CommandListOutputGoalBounds]
run=BuiltInCommandListUnbindAllRenderTargets
vs-t13=copy vb0
ps-cb11=ResourceMatrices
ps-t10=ResourceDepthBuffer
o0=set_viewport Resource1x1
ps-u1=ResourceDepthValue
post ps-u1=null
draw=from_caller

[ShaderOverrideDepthSource]
hash=29b5047597d81be1
post ResourceDepthBuffer=copy ps-t0
post ResourceMatrices=copy ps-cb11
run=CommandListDisplayDepth

[ShaderOverrideDepthSourceSonar]
hash=5fe6d8164825fe0e
post ResourceDepthBuffer=copy ps-t1
post ResourceMatrices=copy ps-cb11
run=CommandListDisplayDepth

[CommandListDisplayDepth]
;if ($show_depth)
;Resource\ShaderFixes\Custom\debug_2d.ini\Debug2D=ResourceDepthBuffer
;ps-cb11=ResourceMatrices
;endif

[CommandListDepthGoal]
; If no depth has been calculated this does nothing
if (!$noDepth)
	vs-t14=ResourceDepthValue
endif
post vs-t14=null
; Start of Goal
if (ps-t0 == -2)
	post $goals = $goals + 1
endif
; End of Goal (2 drawn)
if (ps-t0 == -2.5)
	post $goalBGs = $goalBGs + 1
endif
; Reset Depth @ End of Target/Goal/Crosshair
if ((ps-t0 == -2.5 && $goalBGs == 2) || ps-t0 == -3.5 || ps-t0 == -1)
	post $goalBGs = 0
	post clear=ResourceDepthValue
endif

[ShaderOverride_Text]
hash=6f56e2eb15c63f14
allow_duplicate_hash=true
; Goal texts are drawn first, we count them
if ($goals)
	post $goalTexts = $goalTexts + 1
endif
; Two texts are drawn per Goal, 
; we know how many goals have been drawn, 
; so if we exceed 2*Goals, don't use depth
if ($goalTexts >= ($goals * 2))
	pre $noDepth=1
	; reset so further goal graphics use depth
	post $noDepth=0
endif
run=CommandListDepthGoal

[ShaderOverride_TextBatched]
hash=9fe114e79584a0ac
allow_duplicate_hash=true
run=CommandListDepthGoal

[ShaderOverride_DecorationsBatched]
hash=55642c752fa497f2
allow_duplicate_hash=true
; Calculate Depth @ Start of Target/Goal/Crosshair
if (ps-t0 == -3 || ps-t0 == -2 || ps-t0 == -1)
	run=CustomShaderOutputGoalBoundsBatched
endif
run=CommandListDepthGoal

[ShaderOverride_HUD+Images1]
hash=7fdf27a3924d5530
allow_duplicate_hash=true
; Calculate Depth @ Start of Target/Goal/Crosshair
if (ps-t0 == -3 || ps-t0 == -2 || ps-t0 == -1)
	run=CustomShaderOutputGoalBounds
endif
run=CommandListDepthGoal
vs-cb11=ResourceMatrices

[ShaderOverride_BlockColourBatched]
hash=07a16668ff270883
allow_duplicate_hash=true
run=CommandListDepthVariables
vs-cb11=ResourceMatrices

[ShaderOverride_LightFlares]
hash=c4c52320554d1ee9
run=CommandListDepthBuffer
vs-t13=copy vb0

[PresetTriRotor]
convergence = 75

; Start/End Crosshair = -1
[TextureOverride_Crosshair1]
hash=4a15fb60
filter_index=-1
[TextureOverride_Crosshair2]
hash=c11fb4b5
filter_index=-1
[TextureOverride_Crosshair3]
hash=484ed273
filter_index=-1

[TextureOverride_CrosshairTriRotor]
hash=9941830c
filter_index=-1
[TextureOverride_CrosshairTriRotorBox]
hash=0a5f1dbb
filter_index=-1
preset=PresetTriRotor

; Start of Goal = -2
[TextureOverride_GoalOuter]
hash=89951c97
filter_index=-2
[TextureOverride_GoalCentre]
hash=b5e01512
filter_index=-2.25
[TextureOverride_GoalArrow]
hash=73b56261
filter_index=-2.25
[TextureOverride_GoalDecoBox]
hash=873db96b
filter_index=-2.25
[TextureOverride_GoalDecoText1]
hash=88cac974
filter_index=-2.25
[TextureOverride_GoalDecoText2]
hash=d5f8a4d4
filter_index=-2.25
; End of Goal = -2.5
; Used for lots of things in the HUD, not just the Goal
[TextureOverride_GoalBackground]
hash=d860b2d5
filter_index=-2.5

; Start of Target = -3
[TextureOverride_TargetMark1]
hash=90d0b12f
filter_index=-3
[TextureOverride_TargetMark2]
hash=62de70a7
filter_index=-3.25
; End of Target = -3.5
[TextureOverride_TargetMark3]
hash=2971c2e6
filter_index=-3.5