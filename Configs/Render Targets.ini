[Constants]
global $in_loadout=0
global $in_loadout_prev=0

[Present]
$in_loadout_prev = $in_loadout
$in_loadout=0

[TextureOverride_AllRenderTargets]
match_type = Texture2D
match_bind_flags = +render_target
match_width = = height * 16/9
;match_width = res_width
;match_height = res_height
stereomode=1

[ShaderOverride_ShadowMap]
hash=7c5d68afebead6cc
; Temporary fix
x4=$in_loadout_prev

[ShaderOverride_BodyPos3]
hash=23d8e685b5bb9aee
if ($in_loadout_prev)
    handling=skip
    run=CustomShader_BodyPos4
endif

[CustomShader_BodyPos4]
hs = null
ds = null
vs = ShaderFixes\5a042ae7604f4360-vs_replace.txt
topology = TRIANGLE_LIST
draw=from_caller

[ShaderOverride_HeadPos3]
hash=594f0cceb152b7e9
if ($in_loadout_prev)
    handling=skip
    run=CustomShader_BodyPos4
endif

[CustomShader_HeadPos4]
hs = null
ds = null
vs = ShaderFixes\29192fa2cacefe00-vs_replace.txt
topology = TRIANGLE_LIST
draw=from_caller

[Resource_LoadoutRenderTargetStereo]
mode=stereo
max_copies_per_frame=1

; This RT is used for shadow maps, but is also used to 
; store the Loadout render before drawing it to the screen.
; When a shader below is Reading/Writing to this RT, 
; we swap it out for an identical one except stereo.
[TextureOverride_LoadoutRenderTargetMono]
match_type = Texture2D
match_bind_flags = +render_target
match_width = height
match_format = R8G8B8A8_UNORM
filter_index = -5

; Reads from multiple sources and writes to RT
; Loadout only: Writes to the replacement stereo RT
[ShaderOverride_CompositeLoadout]
hash=d979b3967eb5f0d3
if (o0 == -5)
    pre Resource_LoadoutRenderTargetStereo = copy_desc o0
    pre o0 = ref Resource_LoadoutRenderTargetStereo
    $in_loadout=1
endif

; Draws textures to the ShadowNet/Loadout menu
; Loadout only: Reads from the replacement stereo RT
[ShaderOverride_LoadoutSprites]
hash=d8f047b122d01aab
if (ps-t0 == -5)
    ; this is equivalent to filter_index for HUD layers
    pre x2=-5
    pre ps-t0 = ref Resource_LoadoutRenderTargetStereo
endif
